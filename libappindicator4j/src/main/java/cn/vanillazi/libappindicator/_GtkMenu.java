// Generated by jextract

package cn.vanillazi.libappindicator;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _GtkMenu {
 *     GtkMenuShell menu_shell;
 *     GtkWidget* parent_menu_item;
 *     GtkWidget* old_active_menu_item;
 *     GtkAccelGroup* accel_group;
 *     gchar* accel_path;
 *     GtkMenuPositionFunc position_func;
 *     gpointer position_func_data;
 *     guint toggle_size;
 *     GtkWidget* toplevel;
 *     GtkWidget* tearoff_window;
 *     GtkWidget* tearoff_hbox;
 *     GtkWidget* tearoff_scrollbar;
 *     GtkAdjustment* tearoff_adjustment;
 *     GdkWindow* view_window;
 *     GdkWindow* bin_window;
 *     gint scroll_offset;
 *     gint saved_scroll_offset;
 *     gint scroll_step;
 *     guint timeout_id;
 *     GdkRegion* navigation_region;
 *     guint navigation_timeout;
 *      *     guint needs_destruction_ref_count;
 *     guint torn_off;
 *     guint tearoff_active;
 *     guint scroll_fast;
 *     guint upper_arrow_visible;
 *     guint lower_arrow_visible;
 *     guint upper_arrow_prelight;
 *     guint lower_arrow_prelight;
 * };
 * }
 */
public class _GtkMenu {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        MemoryLayout.structLayout(
            MemoryLayout.structLayout(
                MemoryLayout.structLayout(
                    MemoryLayout.structLayout(
                        MemoryLayout.structLayout(
                            MemoryLayout.structLayout(
                                Constants$root.C_POINTER$LAYOUT.withName("g_class")
                            ).withName("g_type_instance"),
                            Constants$root.C_INT$LAYOUT.withName("ref_count"),
                            MemoryLayout.paddingLayout(32),
                            Constants$root.C_POINTER$LAYOUT.withName("qdata")
                        ).withName("parent_instance"),
                        Constants$root.C_INT$LAYOUT.withName("flags"),
                        MemoryLayout.paddingLayout(32)
                    ).withName("object"),
                    Constants$root.C_SHORT$LAYOUT.withName("private_flags"),
                    Constants$root.C_CHAR$LAYOUT.withName("state"),
                    Constants$root.C_CHAR$LAYOUT.withName("saved_state"),
                    MemoryLayout.paddingLayout(32),
                    Constants$root.C_POINTER$LAYOUT.withName("name"),
                    Constants$root.C_POINTER$LAYOUT.withName("style"),
                    MemoryLayout.structLayout(
                        Constants$root.C_INT$LAYOUT.withName("width"),
                        Constants$root.C_INT$LAYOUT.withName("height")
                    ).withName("requisition"),
                    MemoryLayout.structLayout(
                        Constants$root.C_INT$LAYOUT.withName("x"),
                        Constants$root.C_INT$LAYOUT.withName("y"),
                        Constants$root.C_INT$LAYOUT.withName("width"),
                        Constants$root.C_INT$LAYOUT.withName("height")
                    ).withName("allocation"),
                    Constants$root.C_POINTER$LAYOUT.withName("window"),
                    Constants$root.C_POINTER$LAYOUT.withName("parent")
                ).withName("widget"),
                Constants$root.C_POINTER$LAYOUT.withName("focus_child"),
                MemoryLayout.paddingLayout(64)
            ).withName("container"),
            Constants$root.C_POINTER$LAYOUT.withName("children"),
            Constants$root.C_POINTER$LAYOUT.withName("active_menu_item"),
            Constants$root.C_POINTER$LAYOUT.withName("parent_menu_shell"),
            Constants$root.C_INT$LAYOUT.withName("button"),
            Constants$root.C_INT$LAYOUT.withName("activate_time"),
            MemoryLayout.paddingLayout(64)
        ).withName("menu_shell"),
        Constants$root.C_POINTER$LAYOUT.withName("parent_menu_item"),
        Constants$root.C_POINTER$LAYOUT.withName("old_active_menu_item"),
        Constants$root.C_POINTER$LAYOUT.withName("accel_group"),
        Constants$root.C_POINTER$LAYOUT.withName("accel_path"),
        Constants$root.C_POINTER$LAYOUT.withName("position_func"),
        Constants$root.C_POINTER$LAYOUT.withName("position_func_data"),
        Constants$root.C_INT$LAYOUT.withName("toggle_size"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("toplevel"),
        Constants$root.C_POINTER$LAYOUT.withName("tearoff_window"),
        Constants$root.C_POINTER$LAYOUT.withName("tearoff_hbox"),
        Constants$root.C_POINTER$LAYOUT.withName("tearoff_scrollbar"),
        Constants$root.C_POINTER$LAYOUT.withName("tearoff_adjustment"),
        Constants$root.C_POINTER$LAYOUT.withName("view_window"),
        Constants$root.C_POINTER$LAYOUT.withName("bin_window"),
        Constants$root.C_INT$LAYOUT.withName("scroll_offset"),
        Constants$root.C_INT$LAYOUT.withName("saved_scroll_offset"),
        Constants$root.C_INT$LAYOUT.withName("scroll_step"),
        Constants$root.C_INT$LAYOUT.withName("timeout_id"),
        Constants$root.C_POINTER$LAYOUT.withName("navigation_region"),
        Constants$root.C_INT$LAYOUT.withName("navigation_timeout"),
        MemoryLayout.paddingLayout(32)
    ).withName("_GtkMenu");
    public static MemoryLayout $LAYOUT() {
        return _GtkMenu.$struct$LAYOUT;
    }
    public static MemorySegment menu_shell$slice(MemorySegment seg) {
        return seg.asSlice(0, 152);
    }
    static final VarHandle parent_menu_item$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("parent_menu_item"));
    public static VarHandle parent_menu_item$VH() {
        return _GtkMenu.parent_menu_item$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * GtkWidget* parent_menu_item;
     * }
     */
    public static MemorySegment parent_menu_item$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_GtkMenu.parent_menu_item$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * GtkWidget* parent_menu_item;
     * }
     */
    public static void parent_menu_item$set(MemorySegment seg, MemorySegment x) {
        _GtkMenu.parent_menu_item$VH.set(seg, x);
    }
    public static MemorySegment parent_menu_item$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_GtkMenu.parent_menu_item$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void parent_menu_item$set(MemorySegment seg, long index, MemorySegment x) {
        _GtkMenu.parent_menu_item$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle old_active_menu_item$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("old_active_menu_item"));
    public static VarHandle old_active_menu_item$VH() {
        return _GtkMenu.old_active_menu_item$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * GtkWidget* old_active_menu_item;
     * }
     */
    public static MemorySegment old_active_menu_item$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_GtkMenu.old_active_menu_item$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * GtkWidget* old_active_menu_item;
     * }
     */
    public static void old_active_menu_item$set(MemorySegment seg, MemorySegment x) {
        _GtkMenu.old_active_menu_item$VH.set(seg, x);
    }
    public static MemorySegment old_active_menu_item$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_GtkMenu.old_active_menu_item$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void old_active_menu_item$set(MemorySegment seg, long index, MemorySegment x) {
        _GtkMenu.old_active_menu_item$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle accel_group$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("accel_group"));
    public static VarHandle accel_group$VH() {
        return _GtkMenu.accel_group$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * GtkAccelGroup* accel_group;
     * }
     */
    public static MemorySegment accel_group$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_GtkMenu.accel_group$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * GtkAccelGroup* accel_group;
     * }
     */
    public static void accel_group$set(MemorySegment seg, MemorySegment x) {
        _GtkMenu.accel_group$VH.set(seg, x);
    }
    public static MemorySegment accel_group$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_GtkMenu.accel_group$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void accel_group$set(MemorySegment seg, long index, MemorySegment x) {
        _GtkMenu.accel_group$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle accel_path$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("accel_path"));
    public static VarHandle accel_path$VH() {
        return _GtkMenu.accel_path$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * gchar* accel_path;
     * }
     */
    public static MemorySegment accel_path$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_GtkMenu.accel_path$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * gchar* accel_path;
     * }
     */
    public static void accel_path$set(MemorySegment seg, MemorySegment x) {
        _GtkMenu.accel_path$VH.set(seg, x);
    }
    public static MemorySegment accel_path$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_GtkMenu.accel_path$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void accel_path$set(MemorySegment seg, long index, MemorySegment x) {
        _GtkMenu.accel_path$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle position_func$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("position_func"));
    public static VarHandle position_func$VH() {
        return _GtkMenu.position_func$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * GtkMenuPositionFunc position_func;
     * }
     */
    public static MemorySegment position_func$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_GtkMenu.position_func$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * GtkMenuPositionFunc position_func;
     * }
     */
    public static void position_func$set(MemorySegment seg, MemorySegment x) {
        _GtkMenu.position_func$VH.set(seg, x);
    }
    public static MemorySegment position_func$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_GtkMenu.position_func$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void position_func$set(MemorySegment seg, long index, MemorySegment x) {
        _GtkMenu.position_func$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle position_func_data$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("position_func_data"));
    public static VarHandle position_func_data$VH() {
        return _GtkMenu.position_func_data$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * gpointer position_func_data;
     * }
     */
    public static MemorySegment position_func_data$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_GtkMenu.position_func_data$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * gpointer position_func_data;
     * }
     */
    public static void position_func_data$set(MemorySegment seg, MemorySegment x) {
        _GtkMenu.position_func_data$VH.set(seg, x);
    }
    public static MemorySegment position_func_data$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_GtkMenu.position_func_data$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void position_func_data$set(MemorySegment seg, long index, MemorySegment x) {
        _GtkMenu.position_func_data$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle toggle_size$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("toggle_size"));
    public static VarHandle toggle_size$VH() {
        return _GtkMenu.toggle_size$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * guint toggle_size;
     * }
     */
    public static int toggle_size$get(MemorySegment seg) {
        return (int)_GtkMenu.toggle_size$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * guint toggle_size;
     * }
     */
    public static void toggle_size$set(MemorySegment seg, int x) {
        _GtkMenu.toggle_size$VH.set(seg, x);
    }
    public static int toggle_size$get(MemorySegment seg, long index) {
        return (int)_GtkMenu.toggle_size$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void toggle_size$set(MemorySegment seg, long index, int x) {
        _GtkMenu.toggle_size$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle toplevel$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("toplevel"));
    public static VarHandle toplevel$VH() {
        return _GtkMenu.toplevel$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * GtkWidget* toplevel;
     * }
     */
    public static MemorySegment toplevel$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_GtkMenu.toplevel$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * GtkWidget* toplevel;
     * }
     */
    public static void toplevel$set(MemorySegment seg, MemorySegment x) {
        _GtkMenu.toplevel$VH.set(seg, x);
    }
    public static MemorySegment toplevel$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_GtkMenu.toplevel$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void toplevel$set(MemorySegment seg, long index, MemorySegment x) {
        _GtkMenu.toplevel$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle tearoff_window$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("tearoff_window"));
    public static VarHandle tearoff_window$VH() {
        return _GtkMenu.tearoff_window$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * GtkWidget* tearoff_window;
     * }
     */
    public static MemorySegment tearoff_window$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_GtkMenu.tearoff_window$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * GtkWidget* tearoff_window;
     * }
     */
    public static void tearoff_window$set(MemorySegment seg, MemorySegment x) {
        _GtkMenu.tearoff_window$VH.set(seg, x);
    }
    public static MemorySegment tearoff_window$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_GtkMenu.tearoff_window$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void tearoff_window$set(MemorySegment seg, long index, MemorySegment x) {
        _GtkMenu.tearoff_window$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle tearoff_hbox$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("tearoff_hbox"));
    public static VarHandle tearoff_hbox$VH() {
        return _GtkMenu.tearoff_hbox$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * GtkWidget* tearoff_hbox;
     * }
     */
    public static MemorySegment tearoff_hbox$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_GtkMenu.tearoff_hbox$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * GtkWidget* tearoff_hbox;
     * }
     */
    public static void tearoff_hbox$set(MemorySegment seg, MemorySegment x) {
        _GtkMenu.tearoff_hbox$VH.set(seg, x);
    }
    public static MemorySegment tearoff_hbox$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_GtkMenu.tearoff_hbox$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void tearoff_hbox$set(MemorySegment seg, long index, MemorySegment x) {
        _GtkMenu.tearoff_hbox$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle tearoff_scrollbar$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("tearoff_scrollbar"));
    public static VarHandle tearoff_scrollbar$VH() {
        return _GtkMenu.tearoff_scrollbar$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * GtkWidget* tearoff_scrollbar;
     * }
     */
    public static MemorySegment tearoff_scrollbar$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_GtkMenu.tearoff_scrollbar$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * GtkWidget* tearoff_scrollbar;
     * }
     */
    public static void tearoff_scrollbar$set(MemorySegment seg, MemorySegment x) {
        _GtkMenu.tearoff_scrollbar$VH.set(seg, x);
    }
    public static MemorySegment tearoff_scrollbar$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_GtkMenu.tearoff_scrollbar$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void tearoff_scrollbar$set(MemorySegment seg, long index, MemorySegment x) {
        _GtkMenu.tearoff_scrollbar$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle tearoff_adjustment$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("tearoff_adjustment"));
    public static VarHandle tearoff_adjustment$VH() {
        return _GtkMenu.tearoff_adjustment$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * GtkAdjustment* tearoff_adjustment;
     * }
     */
    public static MemorySegment tearoff_adjustment$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_GtkMenu.tearoff_adjustment$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * GtkAdjustment* tearoff_adjustment;
     * }
     */
    public static void tearoff_adjustment$set(MemorySegment seg, MemorySegment x) {
        _GtkMenu.tearoff_adjustment$VH.set(seg, x);
    }
    public static MemorySegment tearoff_adjustment$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_GtkMenu.tearoff_adjustment$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void tearoff_adjustment$set(MemorySegment seg, long index, MemorySegment x) {
        _GtkMenu.tearoff_adjustment$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle view_window$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("view_window"));
    public static VarHandle view_window$VH() {
        return _GtkMenu.view_window$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * GdkWindow* view_window;
     * }
     */
    public static MemorySegment view_window$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_GtkMenu.view_window$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * GdkWindow* view_window;
     * }
     */
    public static void view_window$set(MemorySegment seg, MemorySegment x) {
        _GtkMenu.view_window$VH.set(seg, x);
    }
    public static MemorySegment view_window$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_GtkMenu.view_window$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void view_window$set(MemorySegment seg, long index, MemorySegment x) {
        _GtkMenu.view_window$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle bin_window$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("bin_window"));
    public static VarHandle bin_window$VH() {
        return _GtkMenu.bin_window$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * GdkWindow* bin_window;
     * }
     */
    public static MemorySegment bin_window$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_GtkMenu.bin_window$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * GdkWindow* bin_window;
     * }
     */
    public static void bin_window$set(MemorySegment seg, MemorySegment x) {
        _GtkMenu.bin_window$VH.set(seg, x);
    }
    public static MemorySegment bin_window$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_GtkMenu.bin_window$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void bin_window$set(MemorySegment seg, long index, MemorySegment x) {
        _GtkMenu.bin_window$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle scroll_offset$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("scroll_offset"));
    public static VarHandle scroll_offset$VH() {
        return _GtkMenu.scroll_offset$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * gint scroll_offset;
     * }
     */
    public static int scroll_offset$get(MemorySegment seg) {
        return (int)_GtkMenu.scroll_offset$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * gint scroll_offset;
     * }
     */
    public static void scroll_offset$set(MemorySegment seg, int x) {
        _GtkMenu.scroll_offset$VH.set(seg, x);
    }
    public static int scroll_offset$get(MemorySegment seg, long index) {
        return (int)_GtkMenu.scroll_offset$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void scroll_offset$set(MemorySegment seg, long index, int x) {
        _GtkMenu.scroll_offset$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle saved_scroll_offset$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("saved_scroll_offset"));
    public static VarHandle saved_scroll_offset$VH() {
        return _GtkMenu.saved_scroll_offset$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * gint saved_scroll_offset;
     * }
     */
    public static int saved_scroll_offset$get(MemorySegment seg) {
        return (int)_GtkMenu.saved_scroll_offset$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * gint saved_scroll_offset;
     * }
     */
    public static void saved_scroll_offset$set(MemorySegment seg, int x) {
        _GtkMenu.saved_scroll_offset$VH.set(seg, x);
    }
    public static int saved_scroll_offset$get(MemorySegment seg, long index) {
        return (int)_GtkMenu.saved_scroll_offset$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void saved_scroll_offset$set(MemorySegment seg, long index, int x) {
        _GtkMenu.saved_scroll_offset$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle scroll_step$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("scroll_step"));
    public static VarHandle scroll_step$VH() {
        return _GtkMenu.scroll_step$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * gint scroll_step;
     * }
     */
    public static int scroll_step$get(MemorySegment seg) {
        return (int)_GtkMenu.scroll_step$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * gint scroll_step;
     * }
     */
    public static void scroll_step$set(MemorySegment seg, int x) {
        _GtkMenu.scroll_step$VH.set(seg, x);
    }
    public static int scroll_step$get(MemorySegment seg, long index) {
        return (int)_GtkMenu.scroll_step$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void scroll_step$set(MemorySegment seg, long index, int x) {
        _GtkMenu.scroll_step$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle timeout_id$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("timeout_id"));
    public static VarHandle timeout_id$VH() {
        return _GtkMenu.timeout_id$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * guint timeout_id;
     * }
     */
    public static int timeout_id$get(MemorySegment seg) {
        return (int)_GtkMenu.timeout_id$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * guint timeout_id;
     * }
     */
    public static void timeout_id$set(MemorySegment seg, int x) {
        _GtkMenu.timeout_id$VH.set(seg, x);
    }
    public static int timeout_id$get(MemorySegment seg, long index) {
        return (int)_GtkMenu.timeout_id$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void timeout_id$set(MemorySegment seg, long index, int x) {
        _GtkMenu.timeout_id$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle navigation_region$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("navigation_region"));
    public static VarHandle navigation_region$VH() {
        return _GtkMenu.navigation_region$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * GdkRegion* navigation_region;
     * }
     */
    public static MemorySegment navigation_region$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_GtkMenu.navigation_region$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * GdkRegion* navigation_region;
     * }
     */
    public static void navigation_region$set(MemorySegment seg, MemorySegment x) {
        _GtkMenu.navigation_region$VH.set(seg, x);
    }
    public static MemorySegment navigation_region$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_GtkMenu.navigation_region$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void navigation_region$set(MemorySegment seg, long index, MemorySegment x) {
        _GtkMenu.navigation_region$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle navigation_timeout$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("navigation_timeout"));
    public static VarHandle navigation_timeout$VH() {
        return _GtkMenu.navigation_timeout$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * guint navigation_timeout;
     * }
     */
    public static int navigation_timeout$get(MemorySegment seg) {
        return (int)_GtkMenu.navigation_timeout$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * guint navigation_timeout;
     * }
     */
    public static void navigation_timeout$set(MemorySegment seg, int x) {
        _GtkMenu.navigation_timeout$VH.set(seg, x);
    }
    public static int navigation_timeout$get(MemorySegment seg, long index) {
        return (int)_GtkMenu.navigation_timeout$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void navigation_timeout$set(MemorySegment seg, long index, int x) {
        _GtkMenu.navigation_timeout$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


